## Global settings
nameOverride: ""
fullnameOverride: ""

## Image settings
phpImage:
  repository: rg.nl-ams.scw.cloud/unframed-container-registry/php
  tag: "8.3"
  pullPolicy: IfNotPresent

## Nginx image for serving WordPress
nginxImage:
  repository: rg.nl-ams.scw.cloud/unframed-container-registry/nginx
  tag: "latest"
  pullPolicy: IfNotPresent

## Data container for application files
dataImage:
  repository: rg.nl-ams.scw.cloud/unframed-container-registry/dummy_page
  tag: "latest"
  pullPolicy: IfNotPresent

## Application settings
wordpress:
  # Bedrock specific settings
  bedrock:
    enabled: true
    webRoot: "/var/www/html/public"
  
  # Environment variables
  env:   
    # WordPress environment
    WP_ENV: production
    WP_HOME: https://example.com
    WP_SITEURL: https://example.com/wp
    
    # WordPress security keys and salts
    # Generate these using: https://roots.io/salts.html
    AUTH_KEY: ""
    SECURE_AUTH_KEY: ""
    LOGGED_IN_KEY: ""
    NONCE_KEY: ""
    AUTH_SALT: ""
    SECURE_AUTH_SALT: ""
    LOGGED_IN_SALT: ""
    NONCE_SALT: ""
    
    # Redis cache settings (used by W3 Total Cache plugin)
    # These will only be set if redis.enabled is true
    # WP_REDIS_HOST: ""
    # WP_REDIS_PORT: "6379"
    # WP_REDIS_PASSWORD: ""
    # WP_REDIS_TIMEOUT: "1"
    # WP_REDIS_READ_TIMEOUT: "1"
    # WP_REDIS_DATABASE: "0"

## Shared volume settings
sharedVolume:
  name: app-data
  
## Service settings
service:
  type: ClusterIP
  port: 8080

## Ingress settings
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

## Scaling settings
replicaCount: 1

## Autoscaling settings
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
  # Optional custom metrics
  # customMetrics: []
  # Optional scaling behavior
  # behavior:
  #   scaleDown:
  #     stabilizationWindowSeconds: 300
  #     policies:
  #     - type: Percent
  #       value: 100
  #       periodSeconds: 15
  #   scaleUp:
  #     stabilizationWindowSeconds: 0
  #     policies:
  #     - type: Percent
  #       value: 100
  #       periodSeconds: 15
  #     - type: Pods
  #       value: 4
  #       periodSeconds: 15
  #     selectPolicy: Max

## Resource settings
resources:
  php:
    requests:
      cpu: 500m
      memory: 512Mi
  nginx:
    requests:
      cpu: 100m
      memory: 128Mi
  init:
    requests:
      cpu: 10m
      memory: 32Mi

## Probe settings
probes:
  php:
    liveness:
      enabled: false
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
      command: ["php-fpm-healthcheck"]
    readiness:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
      command: ["php-fpm-healthcheck"]
    startup:
      enabled: false
      initialDelaySeconds: 120
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 30
      successThreshold: 1
      command: ["php-fpm-healthcheck"]
  nginx:
    liveness:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
      path: /
      port: 8080
    readiness:
      enabled: true
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
      path: /
      port: 8080
    startup:
      enabled: false
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 30
      successThreshold: 1
      path: /
      port: 8080

## MySQL database settings
mysql:
  enabled: true
  auth:
    database: wordpress
    username: wordpress
    password: ""
    rootPassword: ""
  primary:
    persistence:
      enabled: true
      size: 8Gi

## Redis cache settings
redis:
  enabled: false
  image:
    repository: redis
    tag: "7.0-alpine"
    pullPolicy: IfNotPresent
  auth:
    enabled: false
    password: ""
  persistence:
    enabled: false
    size: 1Gi
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
  service:
    port: 6379
  config:
    maxmemory: "100mb"
    maxmemoryPolicy: "allkeys-lru"

## Secret mounts configuration
## Reference existing secrets and mount their keys as environment variables
secretMounts: []
# - secretName: "wordpress-db-credentials"
#   keys:
#     # Simple key (no renaming)
#     - "DB_USER"
#     - "DB_PASSWORD"
#     - "DB_HOST"
#     # Key with renaming (from -> to)
#     - from: "DB_DATABASE"
#       to: "DB_NAME"
# - secretName: "wordpress-s3-credentials"
#   keys:
#     - "S3_UPLOADS_BUCKET"
#     - "S3_UPLOADS_KEY"
#     - "S3_UPLOADS_SECRET"
#     - "S3_UPLOADS_REGION"
#     # Example of key renaming
#     - from: "AWS_S3_BUCKET"
#       to: "S3_UPLOADS_BUCKET"

## Pod settings
podAnnotations: {}
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 33
  seccompProfile:
    type: RuntimeDefault
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["ALL"]
  runAsNonRoot: true
  runAsUser: 33
  seccompProfile:
    type: RuntimeDefault
nodeSelector: {}
tolerations: []
affinity: {}
