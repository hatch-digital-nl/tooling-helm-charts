## Global settings
nameOverride: ""
fullnameOverride: ""

## Image settings
nginxImage:
  repository: registry.scaleway.com/unframed/nginx
  tag: "stable-alpine"
  pullPolicy: IfNotPresent

## Data container for application files
dataImage:
  repository: registry.scaleway.com/unframed/react-data
  tag: "latest"
  pullPolicy: IfNotPresent

## Application settings
react:
  env:
    NODE_ENV: production
    API_URL: https://api.example.com
  
  # React specific settings
  config:
    webRoot: "/var/www/html"

## Shared volume settings
sharedVolume:
  name: app-data

## Scaling settings
replicaCount: 1

## Service settings
service:
  type: ClusterIP
  port: 80

## Ingress settings
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

## Resource settings
resources:
  nginx:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

## Redis cache settings
redis:
  enabled: false
  image:
    repository: redis
    tag: "7.0-alpine"
    pullPolicy: IfNotPresent
  auth:
    enabled: false
    password: ""
  persistence:
    enabled: false
    size: 1Gi
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
  service:
    port: 6379
  config:
    maxmemory: "100mb"
    maxmemoryPolicy: "allkeys-lru"

## Pod settings
podAnnotations: {}
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 33
  seccompProfile:
    type: RuntimeDefault
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["ALL"]
  runAsNonRoot: true
  runAsUser: 33
  seccompProfile:
    type: RuntimeDefault
nodeSelector: {}
tolerations: []
affinity: {}
