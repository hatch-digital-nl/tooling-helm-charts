## Global settings
nameOverride: ""
fullnameOverride: ""

## Nginx image
nginxImage:
  repository: ghcr.io/hatch-digital-nl/tooling-docker-containers/nginx
  tag: "latest"
  pullPolicy: IfNotPresent

## Data container for application files
dataImage:
  repository: ghcr.io/hatch-digital-nl/hosting-dummy-page
  tag: "latest"
  pullPolicy: IfNotPresent

## Application settings
react:
  config:
    webRoot: "/var/www/html"

## Shared volume settings
sharedVolume:
  name: app-data

## Scaling settings
replicaCount: 1

## Service settings
service:
  type: ClusterIP
  port: 8080

## Ingress settings
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

## Cyso Ingress settings
## Simplified ingress configuration that automatically creates separate ingress resources
## for each host with Let's Encrypt certificates
cysoIngress:
  enabled: false
  # List of hostnames to create ingress resources for
  hosts: []
  # - "my.testing.cirmar.com"
  # - "my.testing.cirmar.dkpnt.nl"
  # Optional: Override default annotations
  annotations:
    cert-manager.io/cluster-issuer: cyso-letsencrypt
  # Optional: Override default path configuration
  path: "/"
  pathType: ImplementationSpecific

## Resource settings
resources:
  nginx:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  data:
    requests:
      cpu: 10m
      memory: 32Mi

## Pod settings
podAnnotations: {}
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 33
  seccompProfile:
    type: RuntimeDefault
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["ALL"]
  runAsNonRoot: true
  runAsUser: 33
  seccompProfile:
    type: RuntimeDefault
nodeSelector: {}
tolerations: []
affinity: {}
